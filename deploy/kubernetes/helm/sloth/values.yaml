labels: {}

image:
  repository: ghcr.io/slok/sloth
  tag: v0.11.0

# -- Container resources: requests and limits for CPU, Memory
resources:
  limits:
    cpu: 50m
    memory: 150Mi
  requests:
    cpu: 5m
    memory: 75Mi

imagePullSecrets: []
#  - name: secret1
#  - name: secret2

sloth:
  resyncInterval: ""    # The controller resync interval duration (e.g 15m).
  workers: 0            # The number of concurrent controller workers (e.g 5).
  labelSelector: ""     # Sloth will handle only the ones that match the selector.
  namespace: ""         # The namespace where sloth will the CRs to process.
  extraLabels: {}       # Labels that will be added to all the generated SLO Rules.
  defaultSloPeriod: ""  # The slo period used by sloth (e.g. 30d).
  optimizedRules: true  # Reduce prom load for calculating period window burnrates.
  debug:
    enabled: false
  # Could be: default or json
  logger: default

commonPlugins:
  enabled: true
  image:
    repository: k8s.gcr.io/git-sync/git-sync
    tag: v3.6.1
  gitRepo:
    url: https://github.com/slok/sloth-common-sli-plugins
    branch: main
    resources:
      limits:
        cpu: 50m
        memory: 100Mi
      requests:
        cpu: 5m
        memory: 50Mi

customSloConfig:
  enabled: false
  path: /windows
  data: {}
#    apiVersion: sloth.slok.dev/v1
#    kind: AlertWindows
#    spec:
#    ... See https://sloth.dev/usage/slo-period-windows/

# add deployment pod tolerations
# tolerations:
#   - key: kubernetes.azure.com/scalesetpriority
#     operator: Equal
#     value: spot
#     effect: NoSchedule

podMonitor:
  enabled: true
  #scrapeInterval: 30s
  prometheusLabels: {}

securityContext:
  pod: null
  #   fsGroup: 100
  #   runAsGroup: 1000
  #   runAsNonRoot: true
  #   runAsUser: 100
  container: null
  #   allowPrivilegeEscalation: false

service:
  enabled: false
  type: ClusterIP
  httpPort: 8081
  annotations: {}

# Enable this if you're using https://github.com/coreos/prometheus-operator
serviceMonitor:
  enabled: false
  # additionalLabels is the set of additional labels to add to the ServiceMonitor
  additionalLabels: {}
  # How long until a scrape request times out.
  scrapeTimeout: '30s'
  # fallback to the prometheus default unless specified
  # interval: 30s
  ## Defaults to what's used if you follow CoreOS [Prometheus Install Instructions](https://github.com/helm/charts/tree/master/stable/prometheus-operator#tldr)
  honorLabels: true
  ## Whether Prometheus should use the timestamps of the metrics exposed
  honorTimestamps: true
  # MetricRelabelConfigs to apply to samples before ingestion https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
  metricRelabelings: []
  # RelabelConfigs to apply to samples before scraping. https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
  relabelings: []
  